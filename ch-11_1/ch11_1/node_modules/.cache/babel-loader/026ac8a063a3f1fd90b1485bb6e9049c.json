{"ast":null,"code":"var _jsxFileName = \"/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/job_detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Job_detail(props) {\n  _s();\n\n  const [jobs, setjobs] = useContext(JobContext);\n  const params = useParams();\n  const p1 = params.jobId;\n  var content = \"\";\n  useEffect(() => {\n    jobs.map(job => job.id == p1 ? content = \"ok\" : content = \"ok1\");\n  }, []);\n\n  const load = () => {\n    jobs.map(job => job.id == p1 ? console.log(\"hi\") : content = \"ok1\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onLoad: load,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: params.jobId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), content, jobs.map(job => job.id == p1 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\\"Job Id : \\\"+job.id \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this) + \"Job Title : \" + job.title + \"Job Place : \" + job.place + \"Job time : \" + job.time : '')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Job_detail, \"8DbxXnrLjVLcml6eZ275E0WiE/I=\", false, function () {\n  return [useParams];\n});\n\n_c = Job_detail;\nJob_detail.propTypes = {};\nexport default Job_detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job_detail\");","map":{"version":3,"sources":["/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/job_detail.js"],"names":["React","useContext","useEffect","PropTypes","useParams","JobContext","Job_detail","props","jobs","setjobs","params","p1","jobId","content","map","job","id","load","console","log","title","place","time","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,wBAA3B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,UAAU,CAACI,UAAD,CAAlC;AACA,QAAMK,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,EAAE,GAAGD,MAAM,CAACE,KAAlB;AAEA,MAAIC,OAAO,GAAC,EAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,IAAI,CAACM,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,EAAJ,IAAUL,EAAV,GAClBE,OAAO,GAAC,IADU,GAElBA,OAAO,GAAC,KAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMI,IAAI,GAAC,MAAI;AACbT,IAAAA,IAAI,CAACM,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,EAAJ,IAAUL,EAAV,GAClBO,OAAO,CAACC,GAAR,CAAY,IAAZ,CADkB,GAElBN,OAAO,GAAC,KAFR;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,MAAM,EAAEI,IAAb;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKP,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGC,OAHH,EAIGL,IAAI,CAACM,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,EAAJ,IAAUL,EAAV,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACA,cADA,GACeI,GAAG,CAACK,KADnB,GAEA,cAFA,GAEeL,GAAG,CAACM,KAFnB,GAGA,aAHA,GAGcN,GAAG,CAACO,IAJC,GAMjB,EAND,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAjCQhB,U;UAEQF,S;;;KAFRE,U;AAmCTA,UAAU,CAACiB,SAAX,GAAuB,EAAvB;AAEA,eAAejB,UAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router\";\nimport { JobContext } from \"../../store/JobContent\";\n\nfunction Job_detail(props) {\n  const [jobs, setjobs] = useContext(JobContext);\n  const params = useParams();\n  const p1 = params.jobId;\n\n  var content=\"\"\n\n  useEffect(() => {\n    jobs.map((job) => job.id == p1 ? \n    content=\"ok\" :\n    content=\"ok1\");\n  }, []);\n\n  const load=()=>{\n    jobs.map((job) => job.id == p1 ? \n    console.log(\"hi\") :\n    content=\"ok1\");\n  }\n\n  return (\n    <div onLoad={load}>\n      <h1>hi</h1>\n      <h1>{params.jobId}</h1>\n      {content}\n      {jobs.map((job) => job.id == p1 ? \n      <h1>\"Job Id : \"+job.id </h1>+\n      \"Job Title : \"+job.title + \n      \"Job Place : \"+job.place + \n      \"Job time : \"+job.time \n      \n      : '')}\n    </div>\n  );\n}\n\nJob_detail.propTypes = {};\n\nexport default Job_detail;\n"]},"metadata":{},"sourceType":"module"}