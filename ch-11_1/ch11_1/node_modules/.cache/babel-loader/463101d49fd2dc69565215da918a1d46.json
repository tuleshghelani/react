{"ast":null,"code":"var _jsxFileName = \"/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/post_job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Post_job(props) {\n  _s();\n\n  const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n  const {\n    value,\n    bind,\n    reset\n  } = useInput('');\n\n  const onNewSubmitPost = e => {\n    e.preventDefault(); // console.log(e.target[0].value)\n\n    if (e.target[0].value === \"\") {\n      alert(`Submitting Name ${jobs.value}`);\n      return;\n    }\n\n    const latestId = jobs.length + 1;\n    setTitle(\"\");\n    console.log(titleName.value);\n    titleName.value = \"\";\n    console.log(e.target[0].value);\n    setjobs(prevJobs => [...prevJobs, {\n      id: latestId,\n      title: e.target[0].value,\n      company: e.target[1].value,\n      place: e.target[2].value\n    }]);\n    reset();\n  };\n\n  const onHandleChange = e => {\n    setTitle(...titleName, {\n      titleName: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onNewSubmitPost,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titleName\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"titleName\",\n          className: \"form-control\",\n          value: titleName.value,\n          onChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"company\",\n          className: \"form-control\",\n          onChange: e => setCompany({ ...company,\n            titleName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"place\",\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"place\",\n          className: \"form-control\",\n          onChange: e => setPlace({ ...place,\n            titleName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Post New Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Post_job, \"7so4pJ/i0X71Lg4rTo0uFysanKU=\", true);\n\n_c = Post_job;\nPost_job.propTypes = {};\nexport default Post_job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post_job\");","map":{"version":3,"sources":["/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/post_job.js"],"names":["React","useContext","useEffect","useRef","useState","PropTypes","JobContext","Post_job","props","jobs","setjobs","titleName","setTitle","company","setCompany","place","setPlace","value","bind","reset","useInput","onNewSubmitPost","e","preventDefault","target","alert","latestId","length","console","log","prevJobs","id","title","onHandleChange","propTypes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,UAAU,CAACK,UAAD,CAAlC;AACF,QAAM,CAACK,SAAD,EAAYC,QAAZ,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AAEA,QAAM;AAAEa,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAAyBC,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CAE7B;;AACA,QAAGD,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYP,KAAZ,KAAoB,EAAvB,EACA;AACIQ,MAAAA,KAAK,CAAE,mBAAkBhB,IAAI,CAACQ,KAAM,EAA/B,CAAL;AACA;AACH;;AACD,UAAMS,QAAQ,GAACjB,IAAI,CAACkB,MAAL,GAAY,CAA3B;AACAf,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAS,CAACM,KAAtB;AACAN,IAAAA,SAAS,CAACM,KAAV,GAAkB,EAAlB;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYP,KAAxB;AACAP,IAAAA,OAAO,CAACoB,QAAQ,IAAE,CAAC,GAAGA,QAAJ,EAAa;AAC3BC,MAAAA,EAAE,EAACL,QADwB;AAE3BM,MAAAA,KAAK,EAACV,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYP,KAFS;AAG3BJ,MAAAA,OAAO,EAACS,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYP,KAHO;AAI3BF,MAAAA,KAAK,EAACO,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYP;AAJS,KAAb,CAAX,CAAP;AAMAE,IAAAA,KAAK;AAGN,GAvBD;;AAwBA,QAAMc,cAAc,GAAGX,CAAD,IAAK;AACzBV,IAAAA,QAAQ,CAAC,GAAGD,SAAJ,EAAc;AAACA,MAAAA,SAAS,EAACW,CAAC,CAACE,MAAF,CAASP;AAApB,KAAd,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEI,eAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,WAFL;AAGE,UAAA,SAAS,EAAC,cAHZ;AAIE,UAAA,KAAK,EAAEV,SAAS,CAACM,KAJnB;AAKE,UAAA,QAAQ,EAAEgB;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,SAAS,EAAC,cAHZ;AAIE,UAAA,QAAQ,EAAEX,CAAC,IAAIR,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcF,YAAAA,SAAS,EAAEW,CAAC,CAACE,MAAF,CAASP;AAAlC,WAAD;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAoBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,SAAS,EAAC,cAHZ;AAIE,UAAA,QAAQ,EAAEK,CAAC,IAAIN,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYJ,YAAAA,SAAS,EAAEW,CAAC,CAACE,MAAF,CAASP;AAAhC,WAAD;AAJzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eA6BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqCD;;GAxEQV,Q;;KAAAA,Q;AA0ETA,QAAQ,CAAC2B,SAAT,GAAqB,EAArB;AAEA,eAAe3B,QAAf","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\n\nfunction Post_job(props) {\n    const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n\n  const { value, bind, reset } = useInput('');\n\n  const onNewSubmitPost = (e) => {\n    e.preventDefault();\n    // console.log(e.target[0].value)\n    if(e.target[0].value===\"\")\n    {\n        alert(`Submitting Name ${jobs.value}`)\n        return ;\n    }\n    const latestId=jobs.length+1;\n    setTitle(\"\")\n    console.log(titleName.value)\n    titleName.value = \"\";\n\n    console.log(e.target[0].value)\n    setjobs(prevJobs=>[...prevJobs,{\n        id:latestId,\n        title:e.target[0].value,\n        company:e.target[1].value,\n        place:e.target[2].value,        \n    }])\n    reset();\n    \n\n  };\n  const onHandleChange= (e)=>{\n    setTitle(...titleName,{titleName:e.target.value})\n  }\n  return (\n    <>\n      <form onSubmit={onNewSubmitPost}>\n        <div className=\"form-group\">\n          <label htmlFor=\"titleName\">Title</label>\n          <input\n            type=\"text\"\n            id=\"titleName\"\n            className=\"form-control\"\n            value={titleName.value}\n            onChange={onHandleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"company\">Company</label>\n          <input \n            type=\"text\"\n            id=\"company\"\n            className=\"form-control\" \n            onChange={e => setCompany({ ...company, titleName: e.target.value })} \n        />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"place\">Place</label>\n          <input \n            type=\"text\" \n            id=\"place\" \n            className=\"form-control\" \n            onChange={e => setPlace({ ...place, titleName: e.target.value })} \n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-success\">Post New Job</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nPost_job.propTypes = {};\n\nexport default Post_job;\n"]},"metadata":{},"sourceType":"module"}