{"ast":null,"code":"var _jsxFileName = \"/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/Edit_job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Edit_job(props) {\n  _s();\n\n  const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n  const params = useParams();\n  const p1 = params.jobId; // console.log(p1);\n\n  var rows = [];\n  jobs.map(job => job.id == p1 ? rows.push(job) : \"\");\n\n  const onEditJobForm = e => {// jobs.map((job) => job.id == p1 ? setjobs(job.title=\"aa\"):     \"\");\n  };\n\n  setTitle(rows[0].title);\n\n  const onHandleChange = e => {\n    setTitle(...titleName, {\n      titleName: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onEditJobForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titleName\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"titleName\",\n          className: \"form-control\",\n          value: rows[0].title,\n          onChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"company\",\n          className: \"form-control\",\n          value: rows[0].company,\n          onChange: e => setCompany({ ...company,\n            titleName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"place\",\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"place\",\n          className: \"form-control\",\n          value: rows[0].place,\n          onChange: e => setPlace({ ...place,\n            titleName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Edit Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Edit_job, \"pPdLOI3U/Nhb8qAlVq4bBuzfmCc=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit_job;\nEdit_job.propTypes = {};\nexport default Edit_job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit_job\");","map":{"version":3,"sources":["/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/Edit_job.js"],"names":["React","useContext","useState","PropTypes","JobContext","useParams","Edit_job","props","jobs","setjobs","titleName","setTitle","company","setCompany","place","setPlace","params","p1","jobId","rows","map","job","id","push","onEditJobForm","e","title","onHandleChange","target","value","propTypes"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useParams } from \"react-router\";\n\nfunction Edit_job(props) {\n  const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n\n  const params = useParams();\n  const p1 = params.jobId;\n  // console.log(p1);\n  var rows = [];\n\n  jobs.map((job) => (job.id == p1 ? rows.push(job) : \"\"));\n\n  const onEditJobForm = (e) => {\n    // jobs.map((job) => job.id == p1 ? setjobs(job.title=\"aa\"):     \"\");\n  };\n\n  setTitle(rows[0].title);\n  const onHandleChange = (e) => {\n    setTitle(...titleName, { titleName: e.target.value });\n  };\n\n  return (\n    <>\n      <form onSubmit={onEditJobForm}>\n        <h1>Edit Form</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"titleName\">Title</label>\n          <input\n            type=\"text\"\n            id=\"titleName\"\n            className=\"form-control\"\n            value={rows[0].title}\n            onChange={onHandleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"company\">Company</label>\n          <input\n            type=\"text\"\n            id=\"company\"\n            className=\"form-control\"\n            value={rows[0].company}\n            onChange={(e) =>\n              setCompany({ ...company, titleName: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"place\">Place</label>\n          <input\n            type=\"text\"\n            id=\"place\"\n            className=\"form-control\"\n            value={rows[0].place}\n            onChange={(e) => setPlace({ ...place, titleName: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-success\">Edit Job</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nEdit_job.propTypes = {};\n\nexport default Edit_job;\n"]},"metadata":{},"sourceType":"module"}