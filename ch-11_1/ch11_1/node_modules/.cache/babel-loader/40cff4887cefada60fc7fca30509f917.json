{"ast":null,"code":"var _jsxFileName = \"/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/post_job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useInput } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Post_job(props) {\n  _s();\n\n  const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState(); //   const { value, bind, reset } = useInput('');\n\n  const onNewSubmitPost = e => {\n    e.preventDefault();\n\n    if (e.target[0].value === \"\" || e.target[1].value) {\n      alert(`Please fill all data${jobs.value}`);\n      return;\n    }\n\n    const latestId = jobs.length + 1;\n    setTitle(\"\");\n    console.log(titleName.value);\n    console.log(e.target[0].value);\n    const current = new Date();\n    const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;\n    setjobs(prevJobs => [...prevJobs, {\n      id: latestId,\n      title: e.target[0].value,\n      company: e.target[1].value,\n      place: e.target[2].value,\n      time: date\n    }]);\n  };\n\n  const onHandleChange = e => {\n    setTitle(...titleName, {\n      titleName: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onNewSubmitPost,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titleName\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"titleName\",\n          className: \"form-control\",\n          value: titleName.value,\n          onChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"company\",\n          className: \"form-control\",\n          onChange: e => setCompany({ ...company,\n            titleName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"place\",\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"place\",\n          className: \"form-control\",\n          onChange: e => setPlace({ ...place,\n            titleName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Post New Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Post_job, \"DQDC+pVqjFP89rwIF5gqL7nq6yA=\");\n\n_c = Post_job;\nPost_job.propTypes = {};\nexport default Post_job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post_job\");","map":{"version":3,"sources":["/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/post_job.js"],"names":["React","useContext","useEffect","useRef","useState","PropTypes","JobContext","useInput","Post_job","props","jobs","setjobs","titleName","setTitle","company","setCompany","place","setPlace","onNewSubmitPost","e","preventDefault","target","value","alert","latestId","length","console","log","current","Date","date","getDate","getMonth","getFullYear","prevJobs","id","title","time","onHandleChange","propTypes"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useInput } from \"@mui/material\";\n\nfunction Post_job(props) {\n  const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n\n  //   const { value, bind, reset } = useInput('');\n\n  const onNewSubmitPost = (e) => {\n    e.preventDefault();\n    if (e.target[0].value === \"\" ||e.target[1].value ) {\n      alert(`Please fill all data${jobs.value}`);\n      return;\n    }\n    const latestId = jobs.length + 1;\n    setTitle(\"\");\n    console.log(titleName.value);\n\n    console.log(e.target[0].value);\n    const current = new Date();\n    const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\n    setjobs((prevJobs) => [\n      ...prevJobs,\n      {\n        id: latestId,\n        title: e.target[0].value,\n        company: e.target[1].value,\n        place: e.target[2].value,\n        time:date\n      },\n    ]);\n  };\n  const onHandleChange = (e) => {\n    setTitle(...titleName, { titleName: e.target.value });\n  };\n  return (\n    <>\n      <form onSubmit={onNewSubmitPost}>\n        <div className=\"form-group\">\n          <label htmlFor=\"titleName\">Title</label>\n          <input\n            type=\"text\"\n            id=\"titleName\"\n            className=\"form-control\"\n            value={titleName.value}\n            onChange={onHandleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"company\">Company</label>\n          <input\n            type=\"text\"\n            id=\"company\"\n            className=\"form-control\"\n            onChange={(e) =>\n              setCompany({ ...company, titleName: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"place\">Place</label>\n          <input\n            type=\"text\"\n            id=\"place\"\n            className=\"form-control\"\n            onChange={(e) => setPlace({ ...place, titleName: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-success\">Post New Job</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nPost_job.propTypes = {};\n\nexport default Post_job;\n"]},"metadata":{},"sourceType":"module"}