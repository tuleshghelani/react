{"ast":null,"code":"var _jsxFileName = \"/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/Edit_job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useHistory, useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Edit_job(props) {\n  _s();\n\n  let [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n  const titleRef = useRef();\n  const companyRef = useRef();\n  const placeRef = useRef();\n  const params = useParams();\n  const p1 = params.jobId; // console.log(p1);\n\n  var rows = [];\n  jobs.map(job => job.id == p1 ? rows.push(job) : \"\");\n  const history = useHistory();\n  useEffect(() => {\n    setTitle(rows[0].title);\n    setCompany(rows[0].company);\n    setPlace(rows[0].place);\n    titleRef.current.value = titleName;\n    companyRef.current.value = company;\n    placeRef.current.value = place;\n  });\n\n  const update = job => {\n    // setjobs()\n    console.log(job);\n    setjobs(jobs[1].title = \"wow\");\n  };\n\n  const onEditJobForm = e => {\n    setjobs(jobs.filter(job => job.id !== e)); // jobs.map((job) => job.id == p1 ? setjobs(job.title=\"aa\"):     \"\");\n\n    e.preventDefault(); // jobs.map((job) => job.id == p1 ? update(job) :     \"\");\n    // setjobs(jobs.filter((job)=>\n    //   job.id!=p1\n    // ))\n    // setjobs(jobs.filter((job)=>\n    //   job.id!==p1\n    // ))\n    // setjobs((prevJobs) => [\n    //     ...prevJobs, {\n    //         id: p1,\n    //         title: e.target[0].value,\n    //         company: e.target[1].value,\n    //         place: e.target[2].value,\n    //         date:rows.date\n    //       },])\n    // setjobs((prevJobs) => [\n    //     ...prevJobs,\n    //     {\n    //       id: p1,\n    //       title: e.target[0].value,\n    //       company: e.target[1].value,\n    //       place: e.target[2].value,\n    //       time:rows.date\n    //     },\n    //   ])\n    // jobs[p1-1].title=e.target[0].value;\n    // jobs[p1-1].company=e.target[1].value;\n    // jobs[p1-1].place=e.target[2].value;\n\n    console.log(jobs); // setjobs((prevJobs) => [\n    //     ...prevJobs,\n    //     {\n    //       id: p1,\n    //       title: e.target[0].value,\n    //       company: e.target[1].value,\n    //       place: e.target[2].value,\n    //       time:rows.date\n    //     },\n    //   ]);\n\n    history.push(`/jobs`); // console.log(jobs[1].title)\n  }; //   setTitle(rows[0].title);\n\n\n  const onHandleChange = e => {\n    setTitle(...titleName, {\n      titleName: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onEditJobForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titleName\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"titleName\",\n          className: \"form-control\",\n          ref: titleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"company\",\n          className: \"form-control\",\n          ref: companyRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"place\",\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"place\",\n          className: \"form-control\",\n          ref: placeRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Edit Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Edit_job, \"zGIurSdm2moSgySRXEXi7LBL/lg=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Edit_job;\nEdit_job.propTypes = {};\nexport default Edit_job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit_job\");","map":{"version":3,"sources":["/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/Edit_job.js"],"names":["React","useContext","useEffect","useRef","useState","PropTypes","JobContext","useHistory","useParams","Edit_job","props","jobs","setjobs","titleName","setTitle","company","setCompany","place","setPlace","titleRef","companyRef","placeRef","params","p1","jobId","rows","map","job","id","push","history","title","current","value","update","console","log","onEditJobForm","e","filter","preventDefault","onHandleChange","target","propTypes"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useHistory, useParams } from \"react-router\";\n\nfunction Edit_job(props) {\n  let [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n\n  const titleRef = useRef(); \n  const companyRef = useRef(); \n  const placeRef = useRef(); \n\n  const params = useParams();\n  const p1 = params.jobId;\n  // console.log(p1);\n  var rows = [];\n\n  jobs.map((job) => (job.id == p1 ? rows.push(job) : \"\"));\n  const history = useHistory();\n\n  useEffect(() => {\n    setTitle(rows[0].title);\n    setCompany(rows[0].company);\n    setPlace(rows[0].place);\n    titleRef.current.value=titleName;\n    companyRef.current.value=company;\n    placeRef.current.value=place;\n  });\n\n  const update=(job)=>{\n    // setjobs()\n    console.log(job)\n    setjobs(jobs[1].title=\"wow\")\n  }\n\n  const onEditJobForm = (e) => {\n    setjobs(jobs.filter((job)=>\n    job.id!==e\n  ))\n    // jobs.map((job) => job.id == p1 ? setjobs(job.title=\"aa\"):     \"\");\n    e.preventDefault();\n    // jobs.map((job) => job.id == p1 ? update(job) :     \"\");\n    // setjobs(jobs.filter((job)=>\n    //   job.id!=p1\n    // ))\n    // setjobs(jobs.filter((job)=>\n    //   job.id!==p1\n    // ))\n    // setjobs((prevJobs) => [\n    //     ...prevJobs, {\n    //         id: p1,\n    //         title: e.target[0].value,\n    //         company: e.target[1].value,\n    //         place: e.target[2].value,\n    //         date:rows.date\n    //       },])\n\n    // setjobs((prevJobs) => [\n    //     ...prevJobs,\n    //     {\n    //       id: p1,\n    //       title: e.target[0].value,\n    //       company: e.target[1].value,\n    //       place: e.target[2].value,\n    //       time:rows.date\n    //     },\n    //   ])\n\n    // jobs[p1-1].title=e.target[0].value;\n    // jobs[p1-1].company=e.target[1].value;\n    // jobs[p1-1].place=e.target[2].value;\n    console.log(jobs)\n    // setjobs((prevJobs) => [\n    //     ...prevJobs,\n    //     {\n    //       id: p1,\n    //       title: e.target[0].value,\n    //       company: e.target[1].value,\n    //       place: e.target[2].value,\n    //       time:rows.date\n    //     },\n    //   ]);\n    history.push(`/jobs`);\n    // console.log(jobs[1].title)\n    \n  };\n\n  //   setTitle(rows[0].title);\n  const onHandleChange = (e) => {\n    setTitle(...titleName, { titleName: e.target.value });\n\n  };\n\n  return (\n    <>\n      <form onSubmit={onEditJobForm}>\n        <h1>Edit Form</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"titleName\">Title</label>\n          <input\n            type=\"text\"\n            id=\"titleName\"\n            className=\"form-control\"\n            ref={titleRef}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"company\">Company</label>\n          <input\n            type=\"text\"\n            id=\"company\"\n            className=\"form-control\"\n            ref={companyRef}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"place\">Place</label>\n          <input\n            type=\"text\"\n            id=\"place\"\n            className=\"form-control\"\n            ref={placeRef}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-success\">Edit Job</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nEdit_job.propTypes = {};\n\nexport default Edit_job;\n"]},"metadata":{},"sourceType":"module"}