{"ast":null,"code":"var _jsxFileName = \"/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/Edit_job.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Edit_job(props) {\n  _s();\n\n  const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n  const titleRef = useRef();\n  const companyRef = useRef();\n  const placeRef = useRef();\n  const params = useParams();\n  const p1 = params.jobId; // console.log(p1);\n\n  var rows = [];\n  jobs.map(job => job.id == p1 ? rows.push(job) : \"\");\n  useEffect(() => {\n    setTitle(rows[0].title);\n    setCompany(rows[0].company);\n    setPlace(rows[0].place);\n    titleRef.current.value = titleName;\n    companyRef.current.value = company;\n    placeRef.current.value = place;\n  });\n\n  const update = job => {\n    // setjobs()\n    console.log(job);\n    setjobs(jobs[p1].title = \"wow\");\n  };\n\n  const onEditJobForm = e => {\n    // jobs.map((job) => job.id == p1 ? setjobs(job.title=\"aa\"):     \"\");\n    e.preventDefault();\n    jobs.map(job => job.id == p1 ? update(job) : \"\");\n    console.log(e);\n  }; //   setTitle(rows[0].title);\n\n\n  const onHandleChange = e => {\n    setTitle(...titleName, {\n      titleName: e.target.value\n    });\n  };\n\n  const formSetup = e => {\n    setTitle(rows[0].title);\n    console.log(titleName + \"hii\");\n  };\n\n  const titleName1 = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onEditJobForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titleName\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"titleName\",\n          className: \"form-control\",\n          ref: titleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"company\",\n          className: \"form-control\",\n          ref: companyRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"place\",\n          children: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"place\",\n          className: \"form-control\",\n          ref: placeRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Edit Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Edit_job, \"NBJ7NstCntjqXvu5/UQEZe2NpI4=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit_job;\nEdit_job.propTypes = {};\nexport default Edit_job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit_job\");","map":{"version":3,"sources":["/home/pp-2/TULESH/react/ch-11/ch11_1/src/components/jobs/Edit_job.js"],"names":["React","useContext","useEffect","useRef","useState","PropTypes","JobContext","useParams","Edit_job","props","jobs","setjobs","titleName","setTitle","company","setCompany","place","setPlace","titleRef","companyRef","placeRef","params","p1","jobId","rows","map","job","id","push","title","current","value","update","console","log","onEditJobForm","e","preventDefault","onHandleChange","target","formSetup","titleName1","propTypes"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { JobContext } from \"../../store/JobContent\";\nimport { useParams } from \"react-router\";\n\nfunction Edit_job(props) {\n  const [jobs, setjobs] = useContext(JobContext);\n  const [titleName, setTitle] = useState(\"\");\n  const [company, setCompany] = useState();\n  const [place, setPlace] = useState();\n\n  const titleRef = useRef(); \n  const companyRef = useRef(); \n  const placeRef = useRef(); \n\n  const params = useParams();\n  const p1 = params.jobId;\n  // console.log(p1);\n  var rows = [];\n\n  jobs.map((job) => (job.id == p1 ? rows.push(job) : \"\"));\n\n  useEffect(() => {\n    setTitle(rows[0].title);\n    setCompany(rows[0].company);\n    setPlace(rows[0].place);\n    titleRef.current.value=titleName;\n    companyRef.current.value=company;\n    placeRef.current.value=place;\n  });\n  const update=(job)=>{\n    // setjobs()\n    console.log(job)\n    setjobs(jobs[p1].title=\"wow\")\n  }\n\n  const onEditJobForm = (e) => {\n    // jobs.map((job) => job.id == p1 ? setjobs(job.title=\"aa\"):     \"\");\n    e.preventDefault();\n    jobs.map((job) => job.id == p1 ? update(job) :     \"\");\n    console.log(e)\n  };\n\n  //   setTitle(rows[0].title);\n  const onHandleChange = (e) => {\n    setTitle(...titleName, { titleName: e.target.value });\n  };\n  const formSetup = (e) => {\n    setTitle(rows[0].title);\n    console.log(titleName + \"hii\");\n  };\n  const titleName1=()=>{\n      \n  }\n\n  return (\n    <>\n      <form onSubmit={onEditJobForm}>\n        <h1>Edit Form</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"titleName\">Title</label>\n          <input\n            type=\"text\"\n            id=\"titleName\"\n            className=\"form-control\"\n            ref={titleRef}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"company\">Company</label>\n          <input\n            type=\"text\"\n            id=\"company\"\n            className=\"form-control\"\n            ref={companyRef}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"place\">Place</label>\n          <input\n            type=\"text\"\n            id=\"place\"\n            className=\"form-control\"\n            ref={placeRef}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-success\">Edit Job</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nEdit_job.propTypes = {};\n\nexport default Edit_job;\n"]},"metadata":{},"sourceType":"module"}